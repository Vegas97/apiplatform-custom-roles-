# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  app.bff_name: "%env(APP_BFF_NAME)%"
  app.jwt_secret: "%env(APP_JWT_SECRET)%"
  app.use_mock_data: "%env(APP_USE_MOCK_DATA)%"

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"
      - "../src/State/AbstractDtoProvider.php"

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  # Field Access Resolver service for role-based access control
  App\Service\FieldAccessResolver:
    arguments:
      $logger: "@logger"
      $parameterBag: '@Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface'

  # Microservice Client service
  App\Service\MicroserviceClient:
    arguments:
      $httpClient: '@Symfony\Contracts\HttpClient\HttpClientInterface'
      $logger: "@logger"
      $parameterBag: '@Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface'

  # Mock Microservice Client service for testing
  App\Service\MockMicroserviceClient:
    arguments:
      $logger: "@logger"
      $parameterBag: '@Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface'

  # Abstract DTO Provider with role-based access control
  App\State\AbstractDtoProvider:
    abstract: true
    arguments:
      $fieldAccessResolver: '@App\Service\FieldAccessResolver'
      $requestStack: "@request_stack"
      $logger: "@logger"
      $jwtService: '@App\Service\JwtService'
      $parameterBag: '@Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface'
      $microserviceClient: '@App\Service\MicroserviceClient'
      $mockClient: '@App\Service\MockMicroserviceClient'

  # User DTO Provider with role-based access control
  App\State\UserDtoProvider:
    parent: App\State\AbstractDtoProvider
    tags: ["api_platform.state_provider"]

  # Guest Reservation DTO Provider with role-based access control
  App\State\GuestReservationDtoProvider:
    parent: App\State\AbstractDtoProvider
    tags: ["api_platform.state_provider"]
